// x/2^k = (x < 0 ? x + (1<<k)-1 : x) >> k
int32_t div16(int32_t x) {
  uint32_t sign_bit = (uint32_t)x >> 31;
  int32_t bias = (sign_bit << 4) - sign_bit;

  return (x + bias) >> 4;
}

int32_t div16(int32_t x) {
  /* Compute bias to be either 0 (x >= 0) or 15 (x < 0) */
  int32_t bias = (x >> 31) & 0xF;
  return (x + bias) >> 4;
}
